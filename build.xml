<?xml version="1.0" encoding="utf-8" ?>
<!--  
 Build specification for Tag Value User Experiment. Check the properties file
 for the default paths and edit to match your environment. 
 
 @author Elizeu Santos-Neto (elizeus at ece dot ubc dot ca)      
-->
<project name="tagvalue" default="build-all" basedir=".">
  <description>
	  A build file for the Tag Value User Experiment project
  </description>
	
  <!-- set global properties for this build -->
  <property environment="env"/>
  <property file="build.properties"/>
	
  <!-- set the classpath used in this project -->
  <path id="build.classpath">
    <pathelement path="${java.class.path}/"/>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${tagvalue.classes.dir}"/>
	  <pathelement location="${ant.lib}"/>
  	<pathelement location="${commons.codec.lib}"/>
  	<pathelement location="${commons.logging.lib}"/>
	  <pathelement location="${guava.lib}"/>
	  <pathelement location="${guava.gwt.lib}"/> 
  	<pathelement location="${gwt.sdk}/gwt-user.jar"/>
 	  <pathelement location="${http.client.lib}"/>
  	<pathelement location="${http.core.lib}"/>
  	<pathelement location="${h2.lib}"/>
  	<pathelement location="${java.mail.lib}" />  	
  	<pathelement location="${junit.lib}"/>
  	<pathelement location="war/WEB-INF/classes"/>  	
  	<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
  	<!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>    
  </path>  	

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
  	<copy file="${commons.codec.lib}" todir="war/WEB-INF/lib"/>
  	<copy file="${commons.logging.lib}" todir="war/WEB-INF/lib"/>
    <copy file="${guava.lib}" todir="war/WEB-INF/lib"/>
    <copy file="${guava.gwt.lib}" todir="war/WEB-INF/lib"/> 
    <copy file="${gwt.sdk}/gwt-servlet-deps.jar" todir="war/WEB-INF/lib"/>
  	<copy file="${gwt.sdk}/gwt-servlet.jar" todir="war/WEB-INF/lib"/>
  	<copy file="${http.client.lib}" todir="war/WEB-INF/lib"/>
    <copy file="${http.core.lib}" todir="war/WEB-INF/lib"/>
  	<copy file="${h2.lib}" todir="war/WEB-INF/lib"/>
  	<copy file="${java.mail.lib}" todir="war/WEB-INF/lib"/>
  	
    <!-- <copy file="${lucene.core.lib}" todir="war/WEB-INF/lib"/> -->
    <copy todir="war/WEB-INF/lib">
      <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
  	</copy>
	  <!-- Add any additional server libs that need to be copied -->
  </target>	
	
  <target name="build" depends="init,libs" description="Compile the source">
    <!-- Compile the java code from ${tagvalue.src.dir} into 
         ${tagvalue.classes.dir} -->
    <javac srcdir="${tagvalue.src.dir}" destdir="${tagvalue.classes.dir}" 
    	   includeantruntime="false" classpathref="build.classpath" debug="on"/> 
    <javac srcdir="${tagvalue.src.tests.dir}" destdir="${tagvalue.classes.dir}" 
  		   includeantruntime="false" classpathref="build.classpath" debug="on"/>
  </target>

  <target name="clean" description="Clean up the environment">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${tagvalue.classes.dir}"/>
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/WEB-INF/lib" failonerror="false" />
    <delete dir="war/tagvalue" failonerror="false" />  	  	
    <delete file="tagec.war" failonerror="false" />
  </target>	
	
  <target name="dist" depends="build-all" description="Create the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${tagvalue.dist.dir}"/>

    <!-- Put everything from ${classes} into the tagvalue-${DSTAMP}.jar file -->
    <jar jarfile="${tagvalue.dist.dir}/tagvalue-${DSTAMP}.jar" 
    	 basedir="${tagvalue.classes.dir}"/>  	
  </target>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${tagvalue.classes.dir}"/>
  </target>
	
  <!-- Compile and run the unit tests -->
  <target name="tests" depends="init" description="Run the tests">
    <junit fork="true">
      <classpath>
        <pathelement location="${tagvalue.classes.dir}"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
		
      <batchtest fork="yes">
        <fileset dir="${tagvalue.src.tests.dir}">
          <include name="**/*Test*.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>		
    </junit>	
  </target>	
	
  <!-- Web client -->
  <target name="compile" depends="libs" description="Compile client ">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
    	destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true"
    	debug="true" debuglevel="lines,vars,source" includeantruntime="false">
	    <classpath refid="build.classpath"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="build,compile" 
  	      description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" 
    	   classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="build.classpath"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement 
        	location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
	    <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="ca.ubc.ece.netsyslab.tagvalue.TagValue"/>
    </java>
  </target>

  <target name="devmode" depends="compile" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
	  <classpath>
	    <pathelement location="src"/>
	    <path refid="build.classpath"/>
	    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
	    <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
	  </classpath>
	  <jvmarg value="-Xmx256M"/>
	  <arg value="-startupUrl"/>
	  <arg value="TagRec.html"/>
	  <arg line="-war"/>
	  <arg value="war"/>
	  <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
	  <arg line="${gwt.args}"/>
	  <arg value="com.bbtv.web.TagRec"/>
	</java>
  </target>	

  <target name="hosted" depends="devmode" 
	      description="Run development mode ('hosted' target is dep'ed)" />

  <target name="war" depends="build-all" description="Create a war file">
	<zip destfile="tagvalue.war" basedir="war"/>
  </target>
	
  <target name="build-all" depends="gwtc" description="Build this project" />
	
  <target name="run" depends="build,compile" description="Build this project">
  	<java classname="com.bbtv.ui.text.KomMain">
  		<arg value="${budget}"/>
  		<arg value="${command.name}"/>
  	    <arg value="${query}"/>
  		<arg value="${source.list}"/>
  		<arg value="${top.k}"/>
        <classpath>
          <pathelement location="${tagrec.classes.dir}"/>
  		  <path refid="build.classpath"/>
  		</classpath>
  	</java>
  </target>
</project>